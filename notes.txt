

            for (int i = 0; i < numArgs; i++)
            {
                switch (args[i])
                {
                    case string x:  l.PushString(x);    break;
                    case bool x:    l.PushBoolean(x);   break;
                    case int x:     l.PushInteger(x);   break;
                    case double x:  l.PushNumber(x);    break;
                    case float x:   l.PushNumber(x);    break;
                    //case List<int> x:
                    default: throw new ArgumentException(string.Join("|", Utils.DumpStack(l)));// also "invalid func" or such
                }
            }

            // Get the results from the stack. Make generic???
            object val = retType switch
            {
                null => null,
                int => l.ToInteger(-1),
                double => l.IsNumber(-1),
                string => l.ToString(-1),
                bool => l.ToBoolean(-1),
                // ? table
                // ?? LuaType.Function:
                _ => throw new SyntaxException($"Invalid type:{retType}")
            };



string.pack (fmt, v1, v2, ···)
Returns a binary string containing the values v1, v2, etc. serialized in binary form (packed) according to the format string fmt (see §6.4.2).




TODO2 All enum etc files? LuaType  LuaStatus  LuaRegistry  LuaOperation  LuaHookMask  LuaHookEvent LuaGC  LuaCompare.   LuaRegister? 


==============================================================================



ArgumentException               Raised when a non-null argument that is passed to a method is invalid.
ArgumentNullException           Raised when null argument is passed to a method.
ArgumentOutOfRangeException     Raised when the value of an argument is outside the range of valid values.
DivideByZeroException           Raised when an integer value is divide by zero.
FileNotFoundException           Raised when a physical file does not exist at the specified location.
FormatException                 Raised when a value is not in an appropriate format to be converted from a string by a conversion method such as Parse.
IndexOutOfRangeException        Raised when an array index is outside the lower or upper bounds of an array or collection.
InvalidOperationException       Raised when a method call is invalid in an object's current state.
KeyNotFoundException            Raised when the specified key for accessing a member in a collection is not exists.
NotSupportedException           Raised when a method or operation is not supported.
NullReferenceException          Raised when program access members of null object.
OverflowException               Raised when an arithmetic, casting, or conversion operation results in an overflow.
OutOfMemoryException            Raised when a program does not get enough memory to execute the code.
StackOverflowException          Raised when a stack in memory overflows.
TimeoutException                The time interval allotted to an operation has expired.


===================================================================================

OO . and : https://www.lua.org/pil/16.html

The rather cool aspect of the 'LuaInterface' part is that reflection makes the C# binding almost trivial.

Debug is used during debugging. Trace is writing to the log file. It is kind of like logging. Both are very similar, but do tracing for long term retention, debugging for real time debugging.

https://github.com/dotnet/samples/tree/main/core/interop/cpp-cli


===================================================================================

